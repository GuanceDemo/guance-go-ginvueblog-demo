apiVersion: v1
kind: ConfigMap
metadata:
  name: gvb-server-configmap
data:
  config.docker.toml: |
    # Docker 运行时读取的配置文件, 有些参数会被 docker-compose 中的环境变量覆盖
    # 具体参考 deploy/start 下 docker-compose 和 .env 文件
    # 例如: MYSQL_PORT 会覆盖 [Mysql] 下的 Port

    [Server]
    AppMode = "release" # debug, release
    BackPort = ":8765"  # 前台服务端口
    FrontPort = ":5678" # 后台服务端口

    # 线上部署建议将 Secret 和 Issuer 修改成其他随机值
    [JWT]
    Secret = "abc123321"
    Expire = 24             # 过期时间 (小时)
    Issuer = "gin-vue-blog"

    # 优先会读取 docker-compose 中的环境变量，这里基本不用动
    [Mysql]
    Host = "172.12.0.3"
    Port = "3306"
    Config = ""         # 其他配置, 例如时区
    Dbname = "gvb"
    Username = "root"
    Password = "123456"
    # 日志级别 silent, error, warn, info, 默认 info
    LogMode = "info" # silent 相当于关闭日志

    # 优先会读取 docker-compose 中的环境变量，这里基本不用动
    [Redis]
    DB = 7
    Addr = "172.12.0.2:6379"
    Password = "123456"

    # 线上部署建议将 Name 和 Salt 修改成其他随机值
    [Session]
    Name = "mysession"
    Salt = "salt"
    MaxAge = 600       # 秒

    # 配置发送验证码账号信息
    [Email]
    Host = "smtp.163.com"       # 服务器地址, 例如 smtp.qq.com 前往要发邮件的邮箱查看其 smtp 协议
    Port = 465                  # 前往要发邮件的邮箱查看其 smtp 协议端口, 大多为 465
    From = ""     # 发件人 (邮箱)
    IsSSL = true                # 是否开启 SSL
    Secret = "" # 密钥, 不是邮箱登录密码, 是开启 smtp 服务后获取的一串验证码
    Nickname = ""           # 发件人昵称, 通常为自己的邮箱名

    [Captcha]
    SendEmail = true # 通过邮箱发送验证码
    ExpireTime = 15  # 过期时间 (分钟)

    # 根据需求调整
    [Zap]
    Level = "debug"         # 日志级别: debug, info, warn, error, dpanic, panic, fatal, 默认 info
    Format = "console"     # 输出格式: console, json
    Prefix = "[GIN-BLOG] " # 日志前缀
    Directory = "log"      # 存放日志的文件夹
    ShowLine = true       # 是否显示哪行调用
    LogInConsole = true   # 是否输出到控制台

    # 线上部署建议使用七牛云存储, 自行去七牛云创建对象存储服务
    # https://developer.qiniu.com/kodo/1233/console-quickstart
    # 不使用七牛云可以选择本地存储, 上传文件会存储在你的服务器上
    [Upload]
    OssType = "local"             # 控制存储: local、qiniu
    Path = "public/uploaded"      # 本地文件访问路径 (OssType="local" 才生效)
    StorePath = "public/uploaded" # 本地文件上传路径 (OssType="local" 才生效)
    # Markdown 目前只支持本地上传 (目前使用前端导出, 该配置无效)
    MdPath = "public/markdown/"      # Markdown 访问路径
    MdStorePath = "public/markdown/" # Markdown 上传路径

    # OssType = "Qiniu" 需要完善以下信息
    [Qiniu]
    ImgPath = ""          # 外链
    Zone = ""
    Bucket = ""
    AccessKey = ""
    SecretKey = ""
    UseHttps = false      # 是否使用 https 加速
    UseCdnDomains = false # 上传是否使用 CDN 上传加速


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gvb-server
spec:
  selector:
    matchLabels:
      app: gvb-server
  replicas: 1
  template:
    metadata:
      labels:
        app: gvb-server
    spec:
      hostNetwork: true
      nodeSelector: 
        gvb-demo: "true"
      shareProcessNamespace: true
      containers:
        - name: gvb-server
          image: registry.cn-shenzhen.aliyuncs.com/guance-south/gvb-server-demo:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5678
              hostPort: 5678
          args:
            - /bin/sh
            - -c 
            - /gvb/server -c config/config.docker.toml
            # - sleep 30000
          env:
            - name: SERVER_BACKPORT
              value: ":8765"
            - name: SERVER_FRONTPORT
              value: ":5678"
            - name: MYSQL_HOST
              value: 10.0.16.143 
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_DBNAME
              value: gvb
            - name: MYSQL_USERNAME
              value: root
            - name: MYSQL_PASSWORD
              value: "123456"
            - name: REDIS_ADDR
              value: 10.0.16.143:6379
            - name: REDIS_PASSWORD
              value: "123456"
          volumeMounts:
            - name:  gvb-server-configmap
              mountPath:  /gvb/config/config.docker.toml
              subPath: config.docker.toml
            # - name: shared-data
            #   mountPath: /app
          securityContext:
            runAsUser: 0
            capabilities:
              add:
                - SYS_PTRACE
        - name: gvb-server-instrumentation
          image: registry.cn-shenzhen.aliyuncs.com/guance-south/otel-go-instrumentation:latest
          imagePullPolicy: Always
          args:
            - /bin/sh
            - -c 
            - /otel-go-instrumentation
          env:
            - name: OTEL_GO_AUTO_TARGET_EXE
              value: /gvb/server
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://datakit-service.datakit:4317"
            - name: OTEL_SERVICE_NAME
              value: "Gin-Vue-Blog-1"
          securityContext:
            runAsUser: 0
            capabilities:
              add:
                - SYS_PTRACE
            privileged: true
          # volumeMounts:
          #   - name: shared-data
          #     mountPath: /app          
      volumes:
        - name: gvb-server-configmap
          configMap:
            name: gvb-server-configmap
        # - name: shared-data
        #   emptyDir: {}



